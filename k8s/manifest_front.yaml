apiVersion: v1
items:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: front
      run: front
    name: front
    namespace: myproject
  spec:
    replicas: 1
    selector:
      app: front
      deploymentconfig: front
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: front
          deploymentconfig: front
          run: front
      spec:
        containers:
        - env:
          - name: ZUUL_ROUTES_API_URL
            value: http://localhost:15001/api
          image: 172.30.1.1:5000/myproject/passthrough@sha256:c90c54d226ce0ea14959333f0e15dc647aae5ef9f5660e58caedff4db13a7dc9
          imagePullPolicy: Always
          name: front
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: SERVICE_CLUSTER_NAME
            value: front
          image: 172.30.1.1:5000/myproject/envoy
          imagePullPolicy: Always
          name: envoy-sidecar
          ports:
          - containerPort: 15001
            protocol: TCP
          - containerPort: 15000
            protocol: TCP
          - containerPort: 8180
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /config
            name: volume-kgzyw
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: front-envoy-config
          name: volume-kgzyw
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - front
        from:
          kind: ImageStreamTag
          name: passthrough:latest
          namespace: myproject
        lastTriggeredImage: 172.30.1.1:5000/myproject/passthrough@sha256:c90c54d226ce0ea14959333f0e15dc647aae5ef9f5660e58caedff4db13a7dc9
      type: ImageChange
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2018-01-14T12:08:30Z
      lastUpdateTime: 2018-01-14T12:08:30Z
      message: Deployment config has minimum availability.
      status: "True"
      type: Available
    - lastTransitionTime: 2018-01-14T12:11:51Z
      lastUpdateTime: 2018-01-14T12:11:53Z
      message: replication controller "front-13" successfully rolled out
      reason: NewReplicationControllerAvailable
      status: "True"
      type: Progressing
    details:
      causes:
      - type: ConfigChange
      message: config change
    latestVersion: 13
    observedGeneration: 22
    readyReplicas: 1
    replicas: 1
    unavailableReplicas: 0
    updatedReplicas: 1



- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: front
    name: front
    namespace: myproject
  spec:
    ports:
    - name: envoy-admin
      port: 15000
      protocol: TCP
      targetPort: 15000
    - name: front
      port: 8080
      protocol: TCP
      targetPort: 8180
    selector:
      run: front
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}



- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: front
    name: front
    namespace: myproject
  spec:
    host: front-myproject.192.168.99.100.nip.io
    port:
      targetPort: front
    to:
      kind: Service
      name: front
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2018-01-14T11:19:20Z
        status: "True"
        type: Admitted
      host: front-myproject.192.168.99.100.nip.io
      routerName: router
      wildcardPolicy: None



- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: front
    name: front-envoy-proxy
    namespace: myproject
  spec:
    host: front-envoy-proxy-myproject.192.168.99.100.nip.io
    port:
      targetPort: envoy-admin
    to:
      kind: Service
      name: front
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2018-01-14T11:19:35Z
        status: "True"
        type: Admitted
      host: front-envoy-proxy-myproject.192.168.99.100.nip.io
      routerName: router
      wildcardPolicy: None



- apiVersion: v1
  data:
    envoy.json: |
      {
        "listeners": [
          {
            "address": "tcp://0.0.0.0:8180",
            "filters": [
              {
                "type": "read",
                "name": "http_connection_manager",
                "config": {
                  "codec_type": "auto",
                  "stat_prefix": "ingress_http",
                  "access_log": [
                    {
                      "path": "/tmp/envoy-ingress-traffic"
                    }
                  ],
                  "generate_request_id": true,
                  "tracing": {
                    "operation_name": "ingress"
                  },
                  "route_config": {
                    "virtual_hosts": [
                      {
                        "name": "service_in",
                        "domains": ["*"],
                        "routes": [
                          {
                            "timeout_ms": 0,
                            "prefix": "/",
                            "auto_host_rewrite": true,
                            "cluster": "local_service"
                          }
                        ]
                      }
                    ]
                  },
                  "filters": [
                    {
                      "type": "decoder",
                      "name": "router",
                      "config": {}
                    }
                  ]
                }
              }
            ]
          },
          {
            "address": "tcp://0.0.0.0:15001",
            "filters": [
              {
                "type": "read",
                "name": "http_connection_manager",
                "config": {
                  "codec_type": "auto",
                  "stat_prefix": "egress_http",
                  "access_log": [
                    {
                      "path": "/tmp/envoy-traffic"
                    }
                  ],
                  "generate_request_id": true,
                  "tracing": {
                    "operation_name": "egress"
                  },
                  "route_config": {
                    "virtual_hosts": [
                      {
                        "name": "service",
                        "domains": ["*"],
                        "routes": [
                          {
                            "timeout_ms": 0,
                            "prefix": "/",
                            "auto_host_rewrite": true,
                            "cluster": "httpbin_service"
                          }
                        ]
                      }
                    ]
                  },
                  "filters": [
                    {
                      "type": "decoder",
                      "name": "router",
                      "config": {}
                    }
                  ]
                }
              }
            ]
          }
        ],
        "admin": {
          "access_log_path": "/tmp/envoy-admin",
          "address": "tcp://0.0.0.0:15000"
        },
        "tracing": {
          "http": {
            "driver": {
              "type": "zipkin",
              "config": {
                "collector_cluster": "zipkin",
                "collector_endpoint": "/api/v1/spans"
              }
            }
          }
        },
        "cluster_manager": {
          "clusters": [
            {
              "name": "httpbin_service",
              "connect_timeout_ms": 5000,
              "type": "logical_dns",
              "lb_type": "round_robin",
              "hosts": [
                {
                  "url": "tcp://passthrough:8080"
                }
              ],
              "circuit_breakers": {
                "default": {
                  "max_connections": 1,
                  "max_pending_requests": 1,
                  "max_retries": 3
                }
              },
              "outlier_detection" : {
                "consecutive_5xx": 5,
                "max_ejection_percent": 100,
                "interval_ms": 3000
              }
            },
            {
              "name": "local_service",
              "connect_timeout_ms": 250,
              "type": "strict_dns",
              "lb_type": "round_robin",
              "hosts": [
                {
                  "url": "tcp://127.0.0.1:8080"
                }
              ]
            },
            {
              "name": "zipkin",
              "connect_timeout_ms": 1000,
              "type": "strict_dns",
              "lb_type": "round_robin",
              "hosts": [
                {
                  "url": "tcp://zipkin:9411"
                }
              ]
            }
          ]
        }
      }
  kind: ConfigMap
  metadata:
    labels:
      app: front
    name: front-envoy-config
    namespace: myproject
kind: List
metadata: {}
resourceVersion: ""
selfLink: ""
